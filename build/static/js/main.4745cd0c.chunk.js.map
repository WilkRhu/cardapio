{"version":3,"sources":["assets/img/01.png","component/cabecalho/index.js","service/api.js","component/corpo/index.js","component/footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Cabecalho","class","id","api","require","create","baseURL","Corpo","useState","post","setPost","setCake","loading","setLoadin","Message","hour","Date","getHours","useEffect","setInterval","a","get","response","data","className","map","item","indice","src","_embedded","source_url","alt","style","backgroundColor","backgroundSize","backgroundPosition","title","rendered","acompanhamento","href","aria-hidden","AOS","init","Footer","height","position","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iJAAAA,EAAOC,QAAU,IAA0B,gC,kICI5B,SAASC,IACpB,OACE,yBAAKC,MAAM,kBAAkBC,GAAG,aAC9B,yBAAKD,MAAM,SAASC,GAAG,UACrB,yBAAKD,MAAM,YAAYC,GAAG,kBACxB,yBAAKD,MAAM,WAAWC,GAAG,iB,2DCHrBC,G,MANFC,EAAQ,IAEJC,OAAO,CACrBC,QAAS,0DCKE,SAASC,IAAQ,IAAD,EACHC,mBAAS,IADN,mBACpBC,EADoB,KACdC,EADc,OAEHF,mBAAS,IAFN,mBAEdG,GAFc,aAGEH,oBAAS,GAHX,mBAGpBI,EAHoB,KAGXC,EAHW,KA4B3B,SAASC,IACN,IACKC,GADG,IAAIC,MACEC,WACb,OAAGF,EAAO,EAEC,YAGRA,EAAO,EAEC,UAGRA,EAAO,GAEC,WAGRA,EAAO,GAEC,YAIA,YAKf,OApDAG,qBAAU,WAEFC,YAAW,sBAAC,4BAAAC,EAAA,sEACejB,EAAIkB,IAAI,gBADvB,OACFC,EADE,OAERZ,EAAQY,EAASC,MACjBV,GAAU,GAHF,2CAIT,KACHA,GAAU,KAGhB,IAEFK,qBAAU,WAEJC,YAAW,sBAAC,4BAAAC,EAAA,sEACejB,EAAIkB,IAAI,gBADvB,OACFC,EADE,OAERX,EAAQW,EAASC,MAFT,2CAGT,OAIT,IAgCI,yBAAKC,UAAU,YAAYtB,GAAG,SAC1B,yBAAKsB,UAAU,SAAStB,GAAG,eAA3B,sBAGA,yBAAKsB,UAAU,QACA,IAAZZ,EAAoB,yBAAKY,UAAU,SAAgB,GACjDf,EAAKgB,KAAI,SAACC,EAAMC,GAAP,OACR,yBAAKH,UAAU,MAAMtB,GAAG,YACxB,yBAAKsB,UAAU,OAAOtB,GAAG,SACzB,yBAAKD,MAAM,eACX2B,IAAG,UAAKF,EAAKG,UAAU,oBAAsBH,EAAKG,UAAU,oBAAoB,GAAGC,WAAa,IAChGC,IAAI,iBACJC,MAAO,CACCC,gBAAiB,QACjBC,eAAgB,QAChBC,mBAAoB,YAIxB,yBAAKX,UAAU,aACb,wBAAIA,UAAU,cAAcE,EAAKU,MAAMC,UACvC,uBAAGb,UAAU,aACT,kDADJ,IACmCE,EAAKY,eAAe,6BAC/C,uCAFR,IAE4BZ,EAAK,QAAQ,6BACjC,yBAAKxB,GAAG,aAIlB,uBAAGqC,KAAI,+EAAuEzB,IAAvE,8BAAsGY,EAAKU,MAAMC,WACtH,yBAAKb,UAAU,eACb,uBAAGA,UAAU,iBAAiBgB,cAAY,SAD5C,yBAzFxBC,IAAIC,O,MCHW,SAASC,IACpB,OACI,yBAAKnB,UAAU,kBAAkBtB,GAAG,UAChC,yBAAKsB,UAAU,SAAStB,GAAG,iBAE3B,yBAAKsB,UAAU,YAAYQ,MAAO,CAACY,OAAQ,OAAQC,SAAU,aACzD,yBAAKrB,UAAU,UACX,yBAAKA,UAAU,QAAQtB,GAAG,iBAG9B,yBAAKsB,UAAU,SAAStB,GAAG,YACvB,uBAAGD,MAAM,iBAAiBuC,cAAY,SAD1C,iBACmE,uBAAGvC,MAAM,kBAAkBuC,cAAY,SAD1G,2BCEDM,MAVf,WACE,OACE,oCACE,kBAAC9C,EAAD,MACE,kBAACO,EAAD,MACF,kBAACoC,EAAD,QCEcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4745cd0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/01.694b3657.png\";","import React from \"react\";\r\nimport \"./style.css\";\r\nimport Logo from \"../../assets/img/01.png\";\r\n\r\nexport default function Cabecalho() {\r\n    return (\r\n      <div class=\"container-fluid\" id=\"cabecalho\">\r\n        <div class=\"col-12\" id=\"efeito\">\r\n          <div class=\"container\" id=\"container-logo\">\r\n            <div class=\"col-md-4\" id=\"logomarca\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}","const Axios = require(\"axios\");\r\n\r\nconst api = Axios.create({\r\n    baseURL: \"http://cardapioadm.wilkcaetano.com.br/wp-json/wp/v2/\",\r\n});\r\n\r\nexport default  api;","import React, {useEffect, useState} from \"react\";\r\nimport \"./style.css\"\r\nimport AOS from 'aos';\r\nimport 'aos/dist/aos.css'; \r\nimport api from \"../../service/api\";\r\n\r\nAOS.init();\r\n\r\nexport default function Corpo(){\r\n    const [post, setPost] = useState([]);\r\n    const [cake, setCake] = useState([]);\r\n    const [loading, setLoadin] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        function Post(){\r\n            setInterval(async () => {\r\n                const response = await api.get(\"/food?_embed\");\r\n                setPost(response.data);\r\n                setLoadin(true);\r\n            }, 5000);\r\n            setLoadin(false);\r\n        }\r\n        Post();\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n      function Cake(){\r\n          setInterval(async () => {\r\n              const response = await api.get(\"/cake?_embed\");\r\n              setCake(response.data);\r\n          }, 5000);\r\n          \r\n      }\r\n      Cake();\r\n  },[]);\r\n\r\n    function Message() {\r\n       var d = new Date();\r\n        var hour = d.getHours();\r\n        if(hour < 5)\r\n        {\r\n            return \"Boa Noite\";\r\n        }\r\n        else\r\n        if(hour < 8)\r\n        {\r\n            return \"Bom Dia\";\r\n        }\r\n        else\r\n        if(hour < 12)\r\n        {\r\n            return \"Bom Dia!\";\r\n        }\r\n        else\r\n        if(hour < 18)\r\n        {\r\n            return \"Boa tarde\";\r\n        }\r\n        else\r\n        {\r\n            return \"Boa noite\";\r\n        }\r\n        \r\n    }\r\n   \r\n    return( \r\n        <div className=\"container\" id=\"corpo\"> \r\n            <div className=\"col-12\" id=\"title-corpo\">\r\n                Delícias do Dia\r\n            </div>\r\n            <div className=\"row\">\r\n              {loading === false ? <div className=\"giff\"></div> : \"\"}\r\n                {post.map((item, indice)=>(\r\n                  <div className=\"col\" id=\"box-card\">\r\n                  <div className=\"card\" id=\"cards\">\r\n                  <img class=\"card-img-top\" \r\n                  src={`${item._embedded[\"wp:featuredmedia\"] ? item._embedded[\"wp:featuredmedia\"][0].source_url : \"\"}`} \r\n                  alt=\"Card image cap\" \r\n                  style={{ \r\n                          backgroundColor: \"black\",\r\n                          backgroundSize: \"cover\",\r\n                          backgroundPosition: \"center\",\r\n        \r\n                          }} \r\n                        />\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{item.title.rendered}</h5>\r\n                        <p className=\"card-text\">\r\n                            <span>Acompanhamento: </span> {item.acompanhamento}<br/>\r\n                                <span>800g:</span> {item[\"800g\"]}<br />\r\n                                <div id=\"pedido\">\r\n                              </div>\r\n                        </p>\r\n                      </div>\r\n                      <a href={`http://api.whatsapp.com/send?1=pt_BR&phone=+558193949202&text=Olá ${Message()} gostaria de um(a) ${item.title.rendered}`}>\r\n                        <div className=\"card-footer\">\r\n                          <i className=\"fa fa-whatsapp\" aria-hidden=\"true\"></i> Fazer Pedido\r\n                        </div>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                ))}      \r\n            </div>     \r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport default function Footer(){\r\n    return(\r\n        <div className=\"container-fluid\" id=\"footer\">\r\n            <div className=\"col-12\" id=\"linha-footer\">\r\n            </div>\r\n            <div className=\"container\" style={{height: \"100%\", position: \"relative\"}}>\r\n                <div className=\"col-12\">\r\n                    <div className=\"col-6\" id=\"logo-fotter\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12\" id=\"contatos\">\r\n                    <i class=\"fa fa-whatsapp\" aria-hidden=\"true\"></i> 99501-4436 | <i class=\"fa fa-instagram\" aria-hidden=\"true\"></i> @tempero_do_compadre\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport Cabecalho from \"./component/cabecalho\";\nimport Corpo from \"../src/component/corpo\";\nimport Footer from './component/footer';\n\nfunction App() {\n  return (\n    <>\n      <Cabecalho />\n        <Corpo />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}